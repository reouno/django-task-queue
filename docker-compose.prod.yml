version: "3.8"
services:
  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432" # DBにdocker外部からアクセスする必要がないなら不要
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    restart: always
  rabbit:
    image: rabbitmq:3.9-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"  # managementプラグイン利用のため
    restart: always
  worker1:
    build:
      context: ./api_server
      dockerfile: Dockerfile.worker
    command: sh ./run_celery.sh
    volumes:
      - ./api_server:/app
    depends_on:
      - rabbit
    env_file:
      - ./api_server/.env.prod
  worker2:
    build:
      context: ./api_server
      dockerfile: Dockerfile.worker
    command: sh ./run_celery.sh
    volumes:
      - ./api_server:/app
    depends_on:
      - rabbit
    env_file:
      - ./api_server/.env.prod
  app:
    build:
      context: ./api_server
      dockerfile: Dockerfile.prod
    command: gunicorn --bind 0.0.0.0:8000 --workers 1 --threads 8 api_server.wsgi:application
    expose:
      - 8000 # docker内部でのみ公開
    depends_on:
      - db
      - rabbit
    volumes:
      - ./api_server:/usr/src/app/
      - static_volume:/home/app/web/staticfiles
    env_file:
      - ./api_server/.env.prod
    restart: always
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80" # docker外部からは8000でアクセス
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/web/staticfiles
    restart: always

volumes:
  postgres_data:
  static_volume: